<?phpclass muser extends CI_Model{    protected $_table='users';    public function __construct(){        parent::__construct();    }    public function listAll($limit,$start){        $this->db->select('users.*,usergroups.id,usergroups.title');        $this->db->order_by("user_id");        $this->db->join('usergroups','users.user_type = usergroups.name');        $this->db->limit($limit,$start);        return $this->db->get($this->_table)->result_array();    }    public function listAllByType($limit,$start,$type){        $this->db->select('users.*,usergroups.id,usergroups.title');        $this->db->where('user_type', $type);        $this->db->order_by("user_id");        $this->db->join('usergroups','users.user_type = usergroups.name');        $this->db->limit($limit,$start);        return $this->db->get($this->_table)->result_array();    }    public function getCustomer(){        $this->db->select('users.*,usergroups.id,usergroups.title');        $this->db->order_by("user_id");        $this->db->join('usergroups','users.user_type = usergroups.name');        $this->db->where('usergroups.id',2);        return $this->db->get($this->_table)->result_array();    }    public function addUser($data){        $this->db->insert($this->_table,$data);    }// function kiểm tra tồn tại user    public function checkUsername($username){        $this->db->where("user_name",$username);        if($this->db->get($this->_table)->num_rows()>0){            return false;        }else{            return true;        }    }    // function kiểm tra tồn tại Email    public function checkEmail($emaile){        $this->db->where("user_email",$emaile);        if($this->db->get($this->_table)->num_rows()>0){            return false;        }else{            return true;        }    }    public function checkID($emaile){        $this->db->where("user_id",$emaile);        if($this->db->get($this->_table)->num_rows()>0){            return false;        }else{            return true;        }    }    public function delUser($id){        $this->db->where('user_id',$id);        $this->db->delete($this->_table);    }    public function numRows(){        return $this->db->get($this->_table)->num_rows();    }    public function numRowsByType($type){        $this->db->where('user_type',$type);        return $this->db->get($this->_table)->num_rows();    }    public function getUserById($id){        $this->db->where("user_id",$id);        return $this->db->get($this->_table)->row_array();    }    public function getUserByIdOther($id){        $this->db->where("id_other",$id);        return $this->db->get($this->_table)->row_array();    }    public function getByEmail($mail){        $this->db->where("user_email",$mail);        return $this->db->get($this->_table)->row_array();    }    public function editUserById($id,$data){        $this->db->where("user_id",$id);        $this->db->update($this->_table,$data);    }    public function getUserByUserName($user_name){        $this->db->where("user_email",$user_name);        return $this->db->get($this->_table)->row_array();    }	public function getUserByUserName2($user_name){        $this->db->where("user_name",$user_name);        return $this->db->get($this->_table)->row_array();    }// check login    function checkLogin($user_email,$user_pass)    {        $condition = array(            'user_name'=> $user_email,            'user_pass' => $user_pass        );        $this->db->where($condition);        return $this->db->get($this->_table)->row_array();    }    function checkLogin2($user_email,$user_pass)    {        $condition = array(            'user_email'=> $user_email,            'user_pass' => $user_pass        );        $this->db->where($condition);        $query = $this->db->get('users');        return $query->row_array();    }// lấy danh sách user group    public function getListUserGroup(){        return $this->db->get("usergroups")->result_array();    }    public function countWhere($table,$where_key,$where= 0){        $this->db->where($where_key,$where);        return $this->db->get($table)->num_rows();    }    public function count($table){        return $this->db->get($table)->num_rows();    }}